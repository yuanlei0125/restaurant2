<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.j170502.cateringmange.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.j170502.cateringmange.entity.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_pwd" jdbcType="VARCHAR" property="userPwd" />
    <result column="user_auth" jdbcType="VARCHAR" property="userAuth" />
    <association property="roleName" column="role_id" select="com.j170502.cateringmange.dao.RoleMapper.findRoleName"></association>
  </resultMap>
  <sql id="Base_Column_List">
    user_id, role_id, user_name, user_pwd, user_auth
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  select
  <include refid="Base_Column_List" />
  from user
  where user_id = #{userId,jdbcType=INTEGER}
</select>

  <select id="findUserName" resultType="java.lang.String">
    select
    user_name
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>


  <select id="findById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>


  <select id="login" parameterType="com.j170502.cateringmange.entity.User" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where user_name= #{userName,jdbcType=VARCHAR} AND user_pwd= #{userPwd,jdbcType=VARCHAR}
  </select>

  <select id="findAll" resultType="java.lang.String">
    select
    user_name
    from user
  </select>



  <select id="findAlls" parameterType="com.j170502.cateringmange.entity.User" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
  </select>

  <insert id="save" parameterType="com.j170502.cateringmange.entity.User" >
    insert into user (user_id, role_id, user_name,
    user_pwd, user_auth)
    values (#{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR},
    #{userPwd,jdbcType=VARCHAR}, #{userAuth,jdbcType=VARCHAR})
  </insert>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.j170502.cateringmange.entity.User">
    insert into user (user_id, role_id, user_name, 
      user_pwd, user_auth)
    values (#{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{userPwd,jdbcType=VARCHAR}, #{userAuth,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.j170502.cateringmange.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPwd != null">
        user_pwd,
      </if>
      <if test="userAuth != null">
        user_auth,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="userAuth != null">
        #{userAuth,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.j170502.cateringmange.entity.User">
    update user
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        user_pwd = #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="userAuth != null">
        user_auth = #{userAuth,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.j170502.cateringmange.entity.User">
    update user
    set role_id = #{roleId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      user_pwd = #{userPwd,jdbcType=VARCHAR},
      user_auth = #{userAuth,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updatePassword" parameterType="com.j170502.cateringmange.entity.User">
    update user
    set
    user_pwd = #{userPwd,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>